export default {
  errorPage: {
    goBack: 'Back to index',
    403: 'It\'s may cause forbidden',
    404: 'Page not found'
  },
  common: {
    projectName: 'SVIWO MANAGER',
    infoTimeOut: 'Your login information has expired. Please login again',
    Action: 'Action',
    warning: 'Warning',
    Add: 'Add',
    Search: 'Search',
    Reset: 'Reset',
    detail: 'Detail',
    ok: 'OK',
    cancel: 'cancel',
    success: 'success',
    false: 'false',
    searchTit: 'condition',
    getDataFalse: 'Get Data false!',
    getDataError: 'Get Data Error,please get connect to manager!'
  },
  login: {
    title: 'WELCOME TO SVIWO MANAGER',
    userName: 'userName',
    password: 'password',
    login: 'login',
    success: 'success',
    infoError: 'Account or Password Error',
    loginFalse: 'Login false',
    remember: 'Remember me',
    choseLang: 'language',
    userNameNull: 'UserName is null',
    passwordNull: 'Password is null',
    loginVercodeNull: 'Verification code is null',
    qrcodeFalse: 'Load verification code false',
    vercodeError: 'Verification code error'
  },
  head: {
    welcome: 'welcome',
    logout: 'logout'
  },
  nav: {
    getMenuFalse: 'get menu false',
    home: 'Home'
  },
  countryList: {
    doubleCreate: 'The country already exists',
    CountryName: 'Country Name',
    Unit: 'Unit',
    Symbol: 'Symbol',
    BaseFare: 'Base Fare',
    BaseMiles: 'Base Miles',
    MilesFare: 'Miles Fare',
    TimeFare: 'Time Fare',
    RemoteFare: 'Remote Fare',
    Action: 'Action',
    // ---------other------
    freeze: 'freeze',
    Thraw: 'Thraw',
    confirmFreeze: ' Are you sure to freeze them?',
    confirmThrow: 'Are you sure you want to unfreeze?',
    freezeSuccess: 'Freeze success',
    freezeFalse: 'Freeze false',
    throwSuccess: 'Throw success',
    throwFalse: 'Throw false'
  },
  addCountry: {
    addTitle: 'Add Country',
    editTitle: 'Edit Country',
    // -----基础配置--------
    basic: 'Basic options',
    chooseCountry: 'Choose country',
    unit: 'Unit',
    alarmPhone: 'Alarm phone',
    symbol: 'Symbol',
    // -------行程配置--------
    trip: 'Trip options',
    dispatchRange: 'Dispatch range', // 接单范围
    drivingRange: 'Driving range', // 行程距离
    baseRange: 'Base range', // 基础公里数
    remoteRange: 'Remote range', // 远程公里数
    // ----------运价配置--------
    price: 'Price options',
    baseFare: 'Base Fare', // 起步价
    timeFare: 'Time Fare', // 超时价格
    remoteFare: 'Remote Fare', // 远途价格
    milesFare: 'Miles Fare',
    // 按钮
    submit: 'Submit',
    edit: 'Edit',
    needOptions: 'Please full the options',
    confirmTit: 'You sure append this country?'
  },
  carList: {
    checkCar: 'Please choose car one least',
    noCar: 'There are currently no surplus vehicles to be allocated',
    vehicleNumber: 'vehicleNumber',
    vehiclePhoto: 'vehiclePhoto',
    carStatus: 'carStatus',
    licensePlates: 'licensePlates',
    countryName: 'countryName',
    // -车辆状态
    undistributed: 'undistributed',
    allocated: 'allocated',
    offline: 'offline',
    watch: 'watch',
    reSet: 'update',
    // -----抽屉tit
    searchTit: 'Search',
    addTit: 'Add',
    resetTit: 'Detail',
    frontPhoto: 'frontPhoto',
    leftPhoto: 'leftPhoto',
    rearPhoto: 'rearPhoto',
    rightPhoto: 'rightPhoto'
  },
  passengerList: {
    pasId: 'ID',
    tel: 'Tel',
    username: 'Name',
    firstName: 'firstName',
    lastName: 'lastName',
    passengerSex: 'Sex',
    countryName: 'Country',
    birthday: 'Birthday',
    createTime: 'Register Time',
    loginTime: 'Login Time'
  },
  driverList: {
    existing: 'Driver information duplication',
    driverId: 'ID',
    name: 'Name',
    firstName: 'firstName',
    lastName: 'lastName',
    countryName: 'countryName',
    mobileNumber: 'mobileNumber',
    headImage: 'headImage',
    driverSex: 'driverSex',
    vehicleNumber: 'vehicle NO.',
    drivingCountry: 'drivingCountry',
    telCountry: 'telCountry',
    driverBirthday: 'driverBirthday',
    loginTime: 'loginTime',
    createTime: 'createTime',
    certificateNo: 'certificateNo',
    certificateImage: 'certificateImage',
    driverLicenseTimeStart: 'driverLicenseTimeStart',
    driverLicenseTimeEnd: 'driverLicenseTimeEnd',
    driverLicenseImage: 'driverLicenseImage',
    refuseReason: 'refuseReason',
    // ---- audit
    examine: 'examine',
    reExamine: 'reExamine',
    pass: 'pass',
    refuse: 'refuse'
  },
  // -----------addDriver-----------------
  addDriver: {
    Basic: 'Basic',
    identity: 'identity',
    driverInfo: 'driverInfo',
    distribution: 'distribution',
    // error
    timeStartError: 'The effective date of the driving license is invalid',
    timeEndError: 'The validity of driving license is invalid',
    optionNotFull: 'The information is incomplete',
    licenseTimeError: 'The valid period of driving license should be longer than the valid period',
    certificateNoError: 'The driving license number should be more than five digits and can only be English letters and Numbers'
  },
  audit: {
    toastInfo: 'Confirm that the information is correct？',
    auditSuc: 'approved',
    auditError: 'Review the error',
    auditFalse: 'It has been rejected',
    refuseTit: 'Please select no reason',
    submit: 'submit',
    cancel: 'cancel',
    reason1: 'Basic information error',
    reason2: 'Identity information error',
    reason3: 'Driving information error',
    reason4: 'Vehicle information error',
    refuseError: 'The reason for rejection cannot be left blank'
  },
  orderList: {
    closeOrder: 'Close',
    closeTit: 'please write reason',
    orderId: 'orderId',
    countryName: 'countryName',
    startAddress: 'startAddress',
    endAddress: 'endAddress',
    distance: 'distance',
    completeDuration: 'completeDuration',
    dmobileNumber: 'dmobileNumber',
    pmobileNumber: 'pmobileNumber',
    vehicleNumber: 'vehicleNumber',
    orderPrice: 'orderPrice',
    orderType: 'orderType',
    Dispatch: 'Dispatch',
    Charge: 'Charge',
    startTime: 'startTime',
    endTime: 'endTime',
    orderStatus: 'orderStatus',
    mustChoose: 'Before choose,you need choose order status',
    // 1.已接单;2.到达乘客地点;3.乘客上车;4.到达目的地;5.乘客已支付;6.乘客已评价;7.乘客取消;8.司机取消;9.客服关闭;
    // ====叫车订单状态:0:行程进行中,1:行程结束
    dispatch1: 'Have order',
    dispatch2: 'Arrival of passengers',
    dispatch3: 'Passengers get on',
    dispatch4: 'destination',
    dispatch5: 'Have to pay',
    dispatch6: 'Have evaluation',
    dispatch7: 'Cancel by passenger',
    dispatch8: 'Cancel by driver',
    dispatch9: 'Close by Customer service',
    charge0: 'Stroke in progress',
    charge1: 'Waiting for the comments',
    charge2: 'Have comments',
    charge3: 'cancel'
  },
  orderDetail: {
    basic: 'basic',
    otherInfo: 'Assessment',
    createTime: 'createTime',
    endTime: 'endTime',
    arriveTime: 'arriveTime',
    boardingTime: 'boardingTime',
    callTime: 'callTime',
    commentDesc: 'detail',
    driverStar: 'driverStar',
    speedStar: 'speedStar',
    carStar: 'carStar',
    getRateFalse: 'Failed to get order comment',
    closeOrder: 'Close order',
    reasonTit: 'reason',
    tips: 'Please enter the shutdown reason',
    reasonIsNull: 'The reason cannot be empty',
    closeSuc: 'success',
    closeError: 'false'
  },
  userList: {
    mobile: 'mobile',
    userName: 'userName',
    password: 'password',
    realName: 'realName',
    countryName: 'countryName',
    countryCode: 'countryCode',
    roleName: 'roleName',
    createTime: 'createTime',
    updateTime: 'updateTime',
    enabled: 'User state',
    remark: 'remark',
    abled: 'enable',
    disabled: 'disabled',
    createUser: 'createUser',
    createTimeStart: 'createTimeStart',
    createTimeEnd: 'createTimeEnd',
    role: 'role',
    allRole: 'allRole',
    curRole: 'current role',
    resetPWD: 'reset password',
    resetContent: 'This action will cause the user password to change. Please confirm the action',
    resetSuccess: 'The password has been reset to',
    uNameDisabled: 'The username is unusable',
    countryUnusable: 'This country which choose has been freeze',
    userNameNull: 'userName is Null'
  },
  roleList: {
    getDataFalse: 'Failed to get role list',
    getUserRoleFalse: 'Failed to get the user\'s existing role',
    roleName: 'roleName',
    name: 'encoding',
    countryName: 'countryName',
    createTime: 'createTime',
    createTimeStart: 'createTimeStart',
    createTimeEnd: 'createTimeEnd',
    updateTime: 'updateTime',
    createRealName: 'createRealName',
    remark: 'remark',
    setPerm: 'Configure permissions',
    getAllPermFalse: 'Failed to obtain full permissions',
    getUserPermFalse: 'Failed to obtain an existing permission for a role',
    submit: 'submit'
  }
}
